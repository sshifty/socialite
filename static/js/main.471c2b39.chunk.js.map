{"version":3,"sources":["firebase.js","images/dummy.png","components/Auth/SignUp.js","components/Auth/Login.js","components/Main/Nav.js","components/Main/App.js","components/PostText.js","components/Post.js","components/Posts.js","components/Profile/AboutInfo.js","components/Profile/About.js","components/hooks.js","components/Main/SocialPage.js","components/DescText.js","components/Profile/Settings.js","RouteSwitch.js","index.js"],"names":["auth","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","db","getFirestore","storage","getStorage","logInFunc","email","password","signInWithEmailAndPassword","signUpFunc","name","username","a","createUserWithEmailAndPassword","user","userColl","doc","uid","data","posts","desc","text","setDoc","createPost","userID","clearPost","dt","Date","now","toLocaleDateString","updateDoc","arrayUnion","post","date","createDesc","clearDesc","ListenForDocuments","unsubscribe","useState","queryResults","setQueryResults","useEffect","q","query","collection","onSnapshot","querySnapshot","users","forEach","push","id","loadAllDocuments","getAvatar","pathRef","ref","getDownloadURL","avatarUrl","SignUp","props","loading","setLoading","navigate","useNavigate","nameRef","useRef","nameError","userRef","userError","emailRef","emailError","passwordRef","passwordError","confirmRef","confirmError","formRef","setSignInfo","signInfo","handleName","handleEmail","handlePassword","handleUser","handleConfirm","onAuthStateChanged","handleSignUp","e","preventDefault","prevState","avatar","dummy","alert","showError","current","validity","valueMissing","textContent","tooShort","target","setCustomValidity","tooLong","typeMismatch","value","cleanIt","addEventListener","removeEventListener","className","onSubmit","htmlFor","onChange","type","minLength","maxLength","required","disabled","onClick","Login","unsub","handleLogin","handleExampleLogin","placeholder","to","Nav","setAvatar","userInfo","handleLogOut","signOut","src","alt","icon","faSignOutAlt","App","currentUser","setCurrentUser","map","PostText","handlePost","postInfo","bind","Post","then","url","delBut","faTrash","Posts","sortedPost","temp","JSON","parse","stringify","item","sort","prev","curr","uuidv4","AboutInfo","displayUser","LoaderTemp","color","height","width","timeout","metadata","createdAt","editButton","faUserEdit","signInTime","About","useParams","fillAvatar","userStats","GetUserStats","SocialPage","DescText","handleDesc","Settings","RouteSwitch","setPostInfo","av","files","file","console","log","contentType","storageRef","uploadBytesResumable","uploadBytes","snapshot","uploadFiles","URL","createObjectURL","tempAv","path","element","confirm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.471c2b39.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport {useState,useEffect} from 'react';\r\nimport {getDocs, query, getFirestore , collection, onSnapshot,doc,setDoc,updateDoc,arrayUnion, orderBy} from \"firebase/firestore\"\r\nimport { getDownloadURL, getStorage, ref, uploadBytesResumable , uploadBytes} from \"firebase/storage\";\r\nimport 'dotenv/config';\r\n\r\nimport {getAuth,signInWithEmailAndPassword,createUserWithEmailAndPassword,onAuthStateChanged,signOut} from \"firebase/auth\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIRE_API,\r\n  authDomain: \"socialite-adbf5.firebaseapp.com\",\r\n  projectId: \"socialite-adbf5\",\r\n  storageBucket: \"socialite-adbf5.appspot.com\",\r\n  messagingSenderId: \"17842913995\",\r\n  appId: process.env.REACT_APP_ID\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth= getAuth();\r\nconst db = getFirestore();\r\nconst storage=getStorage();\r\nexport const logInFunc=(email,password)=>{    \r\n    return signInWithEmailAndPassword(auth ,email,password);\r\n}\r\n\r\nexport const signUpFunc=async (name,username,email,password)=>{    \r\n  let {user}= await createUserWithEmailAndPassword(auth ,email,password);\r\n  const userColl=doc(db,`users/${user.uid}`);\r\n        const data={\r\n            name,\r\n            username,\r\n            posts:[\r\n              {\r\n              }\r\n            ],\r\n            desc:{\r\n              text:''\r\n            },\r\n            email:user.email,                \r\n        };\r\n  await setDoc(userColl,data);\r\n  return user;\r\n}\r\n\r\nexport const createPost = async (userID,text,clearPost)=>{\r\n  const dt=Date.now();\r\n  const now=new Date().toLocaleDateString();\r\n  const userColl=doc(db,`users/${userID}`);\r\n  await updateDoc(userColl, {\r\n    posts: arrayUnion({post:text,date:now,dt:dt})\r\n});\r\n  clearPost();\r\n}\r\n\r\nexport const createDesc = async (userID,text,clearDesc)=>{\r\n  const dt=Date.now();\r\n  const now=new Date().toLocaleDateString();\r\n  const userColl=doc(db,`users/${userID}`);\r\n  await updateDoc(userColl, {\r\n    desc: {\r\n      text:text,\r\n      date:now\r\n    }\r\n});\r\n  clearDesc();\r\n};\r\n\r\n\r\nexport const useAuth=()=>{\r\n  const [currentUser,setCurrentUser]=useState();\r\n  useEffect(()=>{\r\n    onAuthStateChanged(auth,user=>{\r\n      const unsub=setCurrentUser(user);\r\n      return unsub;\r\n    })\r\n  },[])\r\n  return currentUser;\r\n}\r\n\r\nexport const logOut=()=>{\r\n  return signOut(auth);\r\n}\r\n\r\n\r\n\r\nexport const ListenForDocuments = () => {\r\n  const [queryResults, setQueryResults] = useState(null);\r\n  let unsubscribe;\r\n\r\n  const loadAllDocuments = () => {\r\n    const q = query(collection(db, \"users\"));\r\n    unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n      const users = [];\r\n      querySnapshot.forEach((doc) => {\r\n        users.push([\r\n          {\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          },\r\n        ]);\r\n      });\r\n      setQueryResults(users);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllDocuments();\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n  return [queryResults, setQueryResults];\r\n};\r\n\r\n\r\nexport const uploadFiles=(file,id)=>{\r\n if(!file) return;\r\n\r\nconsole.log(file)\r\nconst metadata={\r\n  contentType: file.type\r\n}\r\n const storageRef=ref(storage,`files/${id}`);\r\n const uploadTask=uploadBytesResumable(storageRef,file);\r\n\r\nuploadBytes(storageRef, file,metadata).then((snapshot) => {\r\n  console.log('Uploaded a blob or file!',snapshot);\r\n});\r\n}\r\n\r\nexport const getAvatar=async id=>{\r\n  const pathRef=ref(storage,`files/${id}`);\r\n  const avatarUrl=await getDownloadURL(pathRef)\r\n \r\n  \r\n  \r\n  return avatarUrl;\r\n}","export default __webpack_public_path__ + \"static/media/dummy.8973ad91.png\";","import formstyle from \"../../style/formstyle.css\";\r\nimport { useRef, useEffect, useState } from \"react\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { signUpFunc } from \"../../firebase\";\r\nimport dummy from \"../../images/dummy.png\";\r\n\r\nconst SignUp = (props) => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const nameRef = useRef();\r\n  const nameError = useRef();\r\n  const userRef = useRef();\r\n  const userError = useRef();\r\n  const emailRef = useRef(\"\");\r\n  const emailError = useRef();\r\n  const passwordRef = useRef(\"\");\r\n  const passwordError = useRef();\r\n  const confirmRef = useRef();\r\n  const confirmError = useRef();\r\n  const formRef = useRef(\"\");\r\n  const auth = getAuth();\r\n  const {\r\n    setSignInfo,\r\n    signInfo,\r\n    handleName,\r\n    handleEmail,\r\n    handlePassword,\r\n    handleUser,\r\n    handleConfirm,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        navigate(\"/\");\r\n        // ...\r\n      } else {\r\n        setLoading(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleSignUp = async (e) => {\r\n    setLoading(true);\r\n    e.preventDefault();\r\n    try {\r\n      await signUpFunc(\r\n        signInfo.name,\r\n        signInfo.user,\r\n        signInfo.email,\r\n        signInfo.password\r\n      );\r\n      setSignInfo((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          avatar: dummy,\r\n        };\r\n      });\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      alert(\"errorxd\", err);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const showError = (e) => {\r\n    if (emailRef.current.validity.valueMissing) {\r\n      emailError.current.textContent = \"Cannot be empty\";\r\n    } else if (emailRef.current.validity.tooShort) {\r\n      e.target.setCustomValidity(\"email must be valid\");\r\n      emailError.current.textContent = \"Email must be valid\";\r\n    } else if (emailRef.current.validity.tooLong) {\r\n      emailError.current.textContent = \"To long\";\r\n    } else if (emailRef.current.validity.typeMismatch) {\r\n      emailError.current.textContent = \"Enter an email\";\r\n    } else {\r\n      e.target.setCustomValidity(\"\");\r\n      emailError.current.textContent = \"\";\r\n    }\r\n\r\n    if (nameRef.current.validity.valueMissing) {\r\n      nameError.current.textContent = \"Cannot be empty\";\r\n    } else if (nameRef.current.validity.tooShort) {\r\n      nameError.current.textContent = \"To short\";\r\n    } else if (nameRef.current.validity.tooLong) {\r\n      nameError.current.textContent = \"To long\";\r\n    } else if (nameRef.current.validity.typeMismatch) {\r\n      nameError.current.textContent = \"Enter an name\";\r\n    } else {\r\n      nameError.current.textContent = \"\";\r\n    }\r\n\r\n    if (userRef.current.validity.valueMissing) {\r\n      userError.current.textContent = \"Cannot be empty\";\r\n    } else if (userRef.current.validity.tooShort) {\r\n      userError.current.textContent = \"To short\";\r\n    } else if (userRef.current.validity.tooLong) {\r\n      userError.current.textContent = \"To long\";\r\n    } else if (userRef.current.validity.typeMismatch) {\r\n      userError.current.textContent = \"Enter an user\";\r\n    } else {\r\n      userError.current.textContent = \"\";\r\n    }\r\n\r\n    if (passwordRef.current.validity.valueMissing) {\r\n      passwordError.current.textContent = \"Cannot be empty\";\r\n    } else if (passwordRef.current.validity.tooShort) {\r\n      passwordError.current.textContent = \"To short\";\r\n    } else if (passwordRef.current.validity.tooLong) {\r\n      passwordError.current.textContent = \"To long\";\r\n    } else if (passwordRef.current.validity.typeMismatch) {\r\n      passwordError.current.textContent = \"Enter an password\";\r\n    } else {\r\n      passwordError.current.textContent = \"\";\r\n    }\r\n\r\n    if (confirmRef.current.validity.valueMissing) {\r\n      confirmError.current.textContent = \"Cannot be empty\";\r\n    } else if (confirmRef.current.validity.tooShort) {\r\n      confirmError.current.textContent = \"Too short\";\r\n    } else if (confirmRef.current.validity.tooLong) {\r\n      confirmError.current.textContent = \"Too long\";\r\n    } else if (confirmRef.current.validity.typeMismatch) {\r\n      confirmError.current.textContent = \"Enter an confirm\";\r\n    } else if (confirmRef.current.value !== passwordRef.current.value) {\r\n      e.target.setCustomValidity(\"Password must match\");\r\n      confirmError.current.textContent = \"Password must match\";\r\n    } else {\r\n      confirmError.current.textContent = \"\";\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      const cleanIt = formRef.current;\r\n      formRef.current.addEventListener(\"input\", (e) => {\r\n        showError(e);\r\n      });\r\n\r\n      return () => {\r\n        cleanIt.removeEventListener(\"input\", (e) => {\r\n          showError(e);\r\n        });\r\n      };\r\n    }\r\n  });\r\n  if (loading) {\r\n    return <h1>Loading...</h1>;\r\n  } else {\r\n    return (\r\n      <div className=\"form-page\">\r\n        <form ref={formRef} onSubmit={handleSignUp} className=\"form-container\">\r\n          <h1 className=\"app-name\">Socialite</h1>\r\n          <div className=\"input-wrapper\">\r\n            <label htmlFor=\"signUp-fullName\">Full Name</label>\r\n            <input\r\n              ref={nameRef}\r\n              onChange={handleName}\r\n              type=\"text\"\r\n              minLength={2}\r\n              maxLength={30}\r\n              name=\"name\"\r\n              id=\"signUp-fullName\"\r\n              required\r\n            />\r\n            <span ref={nameError} className=\"error span-error\"></span>\r\n          </div>\r\n          <div className=\"input-wrapper\">\r\n            <label htmlFor=\"signUp-userName\">User Name</label>\r\n            <input\r\n              ref={userRef}\r\n              onChange={handleUser}\r\n              minLength={2}\r\n              maxLength={20}\r\n              type=\"text\"\r\n              name=\"user\"\r\n              id=\"signUp-userName\"\r\n              required\r\n            />\r\n            <span ref={userError} className=\"error span-username\"></span>\r\n          </div>\r\n          <div className=\"input-wrapper\">\r\n            <label htmlFor=\"signUp-email\">Email</label>\r\n            <input\r\n              ref={emailRef}\r\n              onChange={handleEmail}\r\n              minLength={7}\r\n              maxLength={30}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"signUp-email\"\r\n              required\r\n            />\r\n            <span ref={emailError} className=\"error span-email\"></span>\r\n          </div>\r\n          <div className=\"input-wrapper\">\r\n            <label htmlFor=\"signUp-password\">Password</label>\r\n            <input\r\n              ref={passwordRef}\r\n              onChange={handlePassword}\r\n              minLength={6}\r\n              maxLength={20}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"signUp-password\"\r\n              required\r\n            />\r\n            <span ref={passwordError} className=\"error span-password\"></span>\r\n          </div>\r\n          <div className=\"input-wrapper\">\r\n            <label htmlFor=\"signUp-confirm\">Confirm Password</label>\r\n            <input\r\n              ref={confirmRef}\r\n              onChange={handleConfirm}\r\n              minLength={6}\r\n              maxLength={20}\r\n              type=\"password\"\r\n              name=\"confirm\"\r\n              id=\"signUp-confirm\"\r\n              required\r\n            />\r\n            <span ref={confirmError} className=\"error span-confirm\"></span>\r\n          </div>\r\n          <div className=\"button-flex-container\">\r\n            <button className=\"btn btn-signup\" disabled={loading} type=\"submit\">\r\n              Sign Up\r\n            </button>\r\n            <button\r\n              className=\"btn btn-submit\"\r\n              onClick={() => navigate(\"../login\")}\r\n              disabled={loading}\r\n              type=\"submit\"\r\n            >\r\n              Back To Login\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SignUp;\r\n","import { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { useRef, useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { logInFunc } from \"../../firebase\";\r\n\r\nconst Login = (props) => {\r\n  const { handleEmail, handlePassword, signInfo } = props;\r\n  const emailRef = useRef();\r\n  const emailError = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordError = useRef();\r\n  const formRef = useRef();\r\n  let navigate = useNavigate();\r\n  const auth = getAuth();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    const unsub = onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        navigate(\"/\");\r\n        // ...\r\n      } else {\r\n        setLoading(false);\r\n      }\r\n    });\r\n    return () => unsub;\r\n  }, []);\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await logInFunc(signInfo.email, signInfo.password);\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      alert(\"Could not login\");\r\n    }\r\n  };\r\n\r\n  const handleExampleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await logInFunc(\"test@test.com\", \"password\");\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      alert(\"Could not login\");\r\n    }\r\n  };\r\n\r\n  const showError = (e) => {\r\n    if (emailRef.current.validity.valueMissing) {\r\n      emailError.current.textContent = \"Cannot be empty\";\r\n    } else if (emailRef.current.validity.tooShort) {\r\n      e.target.setCustomValidity(\"email must be valid\");\r\n      emailError.current.textContent = \"Email must be valid\";\r\n    } else if (emailRef.current.validity.tooLong) {\r\n      emailError.current.textContent = \"To long\";\r\n    } else if (emailRef.current.validity.typeMismatch) {\r\n      emailError.current.textContent = \"Enter an email\";\r\n    } else {\r\n      e.target.setCustomValidity(\"\");\r\n      emailError.current.textContent = \"\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      const cleanIt = formRef.current;\r\n      formRef.current.addEventListener(\"input\", (e) => {\r\n        showError(e);\r\n      });\r\n\r\n      return () => {\r\n        cleanIt.removeEventListener(\"input\", (e) => {\r\n          showError(e);\r\n        });\r\n      };\r\n    }\r\n  });\r\n\r\n  if (loading) {\r\n    return <h1>Loading...</h1>;\r\n  } else {\r\n    return (\r\n      <div className=\"form-page\">\r\n        <form\r\n          onSubmit={handleLogin}\r\n          ref={formRef}\r\n          className=\"form-container login\"\r\n        >\r\n          <h1 className=\"app-name\">Socialite</h1>\r\n          <div className=\"input-wrapper\">\r\n            <label htmlFor=\"login-email\">Email</label>\r\n            <input\r\n              onChange={handleEmail}\r\n              ref={emailRef}\r\n              minLength={7}\r\n              maxLength={30}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"login-email\"\r\n              placeholder=\"Type your email\"\r\n              required\r\n            />\r\n            <span ref={emailError} className=\"error span-email\"></span>\r\n          </div>\r\n          <div className=\"input-wrapper\">\r\n            <label htmlFor=\"login-password\">Password</label>\r\n            <input\r\n              onChange={handlePassword}\r\n              ref={passwordRef}\r\n              minLength={6}\r\n              maxLength={20}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"login-password\"\r\n              placeholder=\"Type your password\"\r\n              required\r\n            />\r\n            <span ref={passwordError} className=\"error span-password\"></span>\r\n          </div>\r\n          <div className=\"button-flex-container\">\r\n            <div className=\"btn-div\">\r\n              <button onClick={handleExampleLogin} className=\"btn btn-submit\">\r\n                Login with Example User\r\n              </button>\r\n            </div>\r\n            <div className=\"btn-div\">\r\n              <button type=\"submit\" className=\"btn btn-submit\">\r\n                Login\r\n              </button>\r\n            </div>\r\n            <div className=\"btn-div\">\r\n              <Link to=\"../signup\">\r\n                <button className=\"btn btn-signup\">Sign up</button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Login;\r\n","import dummy from \"../../images/dummy.png\";\r\nimport nav from \"../../style/nav.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logOut } from \"../../firebase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = (props) => {\r\n  const { setAvatar, signInfo, userInfo } = props;\r\n  let name, id;\r\n  if (!userInfo) {\r\n    name = \"\";\r\n    id = \"\";\r\n  } else {\r\n    name = userInfo[0].data.name;\r\n    id = userInfo[0].id;\r\n  }\r\n\r\n  const handleLogOut = async () => {\r\n    try {\r\n      await logOut();\r\n    } catch {\r\n      alert(\"ERROR LOGGING OUT\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"nav-container\">\r\n        <Link className=\"app-logo\" to=\"\">\r\n          <h1>Socialite</h1>\r\n        </Link>\r\n        <div className=\"nav-right\">\r\n          <div className=\"avatar-container container\">\r\n            <img src={signInfo.avatar ? signInfo.avatar : dummy} alt=\"\" />\r\n          </div>\r\n          <Link className=\"username\" to={id}>\r\n            <div>{name}</div>\r\n          </Link>\r\n          <div className=\"settings-container container\">\r\n            <button onClick={handleLogOut} className=\"btn-settings \">\r\n              <FontAwesomeIcon icon={faSignOutAlt}></FontAwesomeIcon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { useNavigate, Outlet } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { ListenForDocuments } from \"../../firebase\";\nimport Nav from \"./Nav\";\n\nimport AppStyle from \"../../style/AppStyle.css\";\n\nconst App = (props) => {\n  const { setAvatar, signInfo } = props;\n  const auth = getAuth();\n  const [loading, setLoading] = useState(true);\n  const [currentUser, setCurrentUser] = useState();\n  let navigate = useNavigate();\n  let tempUser, userInfo;\n  const [queryResults, setQueryResults] = ListenForDocuments();\n\n  useEffect(() => {\n    onAuthStateChanged(auth, async (user) => {\n      if (user) {\n        //tempUser=user;\n        setAvatar(user.uid);\n        setCurrentUser(user);\n        setLoading(false);\n      } else {\n        navigate(\"/login\");\n      }\n    });\n  }, []);\n\n  if (queryResults && currentUser) {\n    queryResults.map((query) => {\n      if (query[0].id === currentUser.uid) {\n        userInfo = query;\n      }\n    });\n  }\n\n  if (loading) {\n    return <h1>Loading...</h1>;\n  } else {\n    return (\n      <div className=\"App\">\n        <Nav\n          setAvatar={setAvatar}\n          signInfo={signInfo}\n          userInfo={userInfo}\n          currentUser={currentUser}\n        />\n        <div className=\"center\">\n          <Outlet />\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","import { createPost } from \"../firebase\";\r\n\r\nconst PostText = (props) => {\r\n  const { clearPost, handlePost, createPost, currentUser, postInfo } = props;\r\n  return (\r\n    <div className=\"post-textarea\">\r\n      <textarea\r\n        value={postInfo.post}\r\n        className=\"textarea-style\"\r\n        onChange={handlePost}\r\n        name=\"\"\r\n        id=\"\"\r\n        placeholder=\"Make A post\"\r\n      ></textarea>\r\n      <div className=\"btn-post-container\">\r\n        <button\r\n          onClick={createPost.bind(\r\n            this,\r\n            currentUser.uid,\r\n            postInfo.post,\r\n            clearPost\r\n          )}\r\n          className=\"btn btn-post\"\r\n        >\r\n          Post\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostText;\r\n","import { getAvatar } from \"../firebase\";\r\nimport dummy from \"../images/dummy.png\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport deleteIcon from '../images/delete.png';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Post = (props) => {\r\n    let navigate=useNavigate();\r\n  const [avatar, setAvatar] = useState();\r\n  const { name, id, post, date, currentUser } = props;\r\n  \r\n  if (id) {\r\n    getAvatar(id).then((url) => {\r\n      setAvatar(url);\r\n    });\r\n  }\r\n  \r\n  if (currentUser) {\r\n    const delBut = currentUser.uid === id ?\r\n     <button className=\"btn-del\">\r\n       <FontAwesomeIcon icon={faTrash}>\r\n\r\n       </FontAwesomeIcon>\r\n     </button> : null;\r\n    if(!post){\r\n      return null;\r\n    }else{\r\n      return (\r\n        <div className=\"post-card\">\r\n          <div className=\"post-header\">\r\n            <div className=\"user-avatar\">\r\n              <div className=\"post-avatar-container\">\r\n                <img\r\n                  src={avatar ? avatar : dummy}\r\n                  alt=\"avatar pics\"\r\n                  className=\"post-avatar\"\r\n                />\r\n              </div>\r\n              <p className=\"post-name\" onClick={()=>navigate(`../../${id}`)}>{name}</p>\r\n              \r\n              <p className=\"date\">posted {date}</p>\r\n            </div>\r\n            <div className=\"delete-btn-container\">\r\n              {delBut}\r\n  \r\n            </div>\r\n          </div>\r\n          <div className=\"post-content\">{post}</div>\r\n          \r\n        </div>\r\n      );\r\n\r\n    }\r\n  }else {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n};\r\n\r\nexport default Post;\r\n","import { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport Post from \"./Post\";\r\nconst Posts = (props) => {\r\n  const { queryResults } = props;\r\n  const auth = getAuth();\r\n  const [currentUser, setCurrentUser] = useState();\r\n  let tempUser;\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, async (user) => {\r\n      if (user) {\r\n        tempUser = user;\r\n        setCurrentUser(tempUser);\r\n      } else {\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  let tempPosts = [];\r\n  let temp = [];\r\n  let sortedPost;\r\n\r\n  if (queryResults) {\r\n    tempPosts = JSON.parse(JSON.stringify(queryResults));\r\n    tempPosts.map((item) => {\r\n      if (!item[0]) {\r\n        item.data.posts.map((post) => {\r\n          temp.push({\r\n            name: item.data.name,\r\n            id: item.id,\r\n            date: post.date,\r\n            dt: post.dt,\r\n            post: post.post,\r\n          });\r\n        });\r\n      } else {\r\n        item[0].data.posts.map((post) => {\r\n          temp.push({\r\n            name: item[0].data.name,\r\n            id: item[0].id,\r\n            date: post.date,\r\n            dt: post.dt,\r\n            post: post.post,\r\n          });\r\n        });\r\n      }\r\n    });\r\n    sortedPost = temp.sort((prev, curr) => {\r\n      return prev.dt >= curr.dt ? -1 : 1;\r\n    });\r\n\r\n    return (\r\n      <div className=\"posts-container\">\r\n        {sortedPost.map((post) => (\r\n          <Post\r\n            key={uuidv4()}\r\n            name={post.name}\r\n            id={post.id}\r\n            post={post.post}\r\n            date={post.date}\r\n            currentUser={currentUser}\r\n          />\r\n        ))}\r\n        {/* {queryResults.map((query) => {\r\n                \r\n              return query[0].data.posts.map((post) => {\r\n                return <Post \r\n                    data={query[0].data}\r\n                    id={query[0].id}\r\n                    post={post}\r\n                    currentUser={currentUser}\r\n                />\r\n              });\r\n            })} */}\r\n      </div>\r\n    );\r\n  } else {\r\n    return <h1>Something happened</h1>;\r\n  }\r\n};\r\n\r\nexport default Posts;\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserEdit } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst AboutInfo = (props) => {\r\n  let navigate = useNavigate();\r\n  const { displayUser, currentUser } = props;\r\n  const LoaderTemp = (\r\n    <Loader\r\n      type=\"Puff\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n      timeout={3000} //3 secs\r\n    />\r\n  );\r\n  if (currentUser && displayUser) {\r\n    const date = currentUser.auth.currentUser.metadata.createdAt;\r\n\r\n    const editButton =\r\n      displayUser[0].id === currentUser.uid ? (\r\n        <div className=\"btn-edit-container\">\r\n          <button\r\n            onClick={() => {\r\n              navigate(\"../settings\");\r\n            }}\r\n            className=\"btn-edit\"\r\n          >\r\n            <FontAwesomeIcon icon={faUserEdit} />\r\n          </button>\r\n        </div>\r\n      ) : null;\r\n    const signInTime = new Date(date * 1).toLocaleDateString();\r\n    return (\r\n      <div className=\"info\">\r\n        <div className=\"info-header\">\r\n          <h3>About Me</h3>\r\n          {editButton}\r\n        </div>\r\n        <div className=\"info-description\">{displayUser[0].data.desc.text}</div>\r\n        <div className=\"line-break\"></div>\r\n        <p className=\"created-p\">Created on: {signInTime}</p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return LoaderTemp;\r\n  }\r\n};\r\n\r\nexport default AboutInfo;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { GetUserStats } from \"../hooks\";\r\nimport { ListenForDocuments } from \"../../firebase\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getAvatar, createPost } from \"../../firebase\";\r\nimport dummy from \"../../images/dummy.png\";\r\nimport PostText from \"../PostText\";\r\nimport Posts from \"../Posts\";\r\nimport AboutInfo from \"./AboutInfo\";\r\n\r\nconst About = (props) => {\r\n  let { id } = useParams();\r\n  const auth = getAuth();\r\n  let tempUser, userInfo, displayUser;\r\n  const [queryResults, setQueryResults] = ListenForDocuments();\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [avatar, setAvatar] = useState();\r\n  const userStats = GetUserStats();\r\n\r\n  const { fillAvatar, clearPost, handlePost, postInfo } = props;\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, async (user) => {\r\n      if (user) {\r\n        tempUser = user;\r\n        setCurrentUser(tempUser);\r\n      }\r\n    });\r\n  }, []);\r\n  if (queryResults && currentUser) {\r\n    getAvatar(id).then((url) => {\r\n      setAvatar(url);\r\n    });\r\n    queryResults.map((query) => {\r\n      if (query[0].id === currentUser.uid) {\r\n        userInfo = query;\r\n      }\r\n      if (query[0].id === id) {\r\n        displayUser = query;\r\n      }\r\n    });\r\n  }\r\n\r\n  if (userInfo && displayUser) {\r\n    return (\r\n      <div className=\"about-page\">\r\n        <div className=\"about-header\">\r\n          <div className=\"about-img-container\">\r\n            <img src={avatar ? avatar : dummy} alt=\"\" className=\"avatar\" />\r\n          </div>\r\n          <h1 className=\"about-name\">{displayUser[0].data.name}</h1>\r\n        </div>\r\n        <div className=\"about-main\">\r\n          <div className=\"about-info\">\r\n            <AboutInfo\r\n              displayUser={displayUser}\r\n              currentUser={currentUser}\r\n              fillAvatar={fillAvatar}\r\n            />\r\n          </div>\r\n          <div className=\"about-posts\">\r\n            {currentUser.uid === id ? (\r\n              <PostText\r\n                clearPost={clearPost}\r\n                handlePost={handlePost}\r\n                createPost={createPost}\r\n                postInfo={postInfo}\r\n                currentUser={currentUser}\r\n              />\r\n            ) : null}\r\n            <Posts queryResults={displayUser} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n};\r\n\r\nexport default About;\r\n","import { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ListenForDocuments } from \"../firebase\";\r\n\r\nexport const GetUserStats = () => {\r\n  let userStats;\r\n\r\n  const auth = getAuth();\r\n  let tempUser;\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [queryResults, setQueryResults] = ListenForDocuments();\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, async (user) => {\r\n      if (user) {\r\n        tempUser = user;\r\n        setCurrentUser(tempUser);\r\n      }\r\n    });\r\n  }, []);\r\n  if (queryResults && currentUser) {\r\n    queryResults.map((query) => {\r\n      if (query[0].id === currentUser.uid) {\r\n        userStats = query;\r\n      }\r\n    });\r\n  }\r\n  return userStats;\r\n};\r\n","import { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { createPost } from \"../../firebase\";\r\nimport Posts from \"../Posts\";\r\nimport PostText from \"../PostText\";\r\nimport { ListenForDocuments } from \"../../firebase\";\r\n\r\nconst SocialPage = (props) => {\r\n  const { signInfo, clearPost, handlePost, postInfo } = props;\r\n  const auth = getAuth();\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  let tempUser, userInfo;\r\n  const [queryResults, setQueryResults] = ListenForDocuments();\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, async (user) => {\r\n      if (user) {\r\n        tempUser = user;\r\n        setCurrentUser(tempUser);\r\n        setLoading(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  if (queryResults && currentUser) {\r\n    queryResults.map((query) => {\r\n      if (query[0].id === currentUser.uid) {\r\n        userInfo = query;\r\n      }\r\n    });\r\n  }\r\n\r\n  if (loading) {\r\n    return <h1>Loading...</h1>;\r\n  } else {\r\n    return (\r\n      <div className=\"social-page\">\r\n        <PostText\r\n          handlePost={handlePost}\r\n          createPost={createPost}\r\n          currentUser={currentUser}\r\n          postInfo={postInfo}\r\n          clearPost={clearPost}\r\n        />\r\n\r\n        <Posts signInfo={signInfo} queryResults={queryResults} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SocialPage;\r\n","import AppStyle from \"../style/AppStyle.css\";\r\n\r\nconst DescText = (props) => {\r\n  const { clearDesc, handleDesc, createDesc, currentUser, signInfo } = props;\r\n\r\n  if (currentUser) {\r\n    return (\r\n      <div className=\"post-textarea\">\r\n        <textarea\r\n          id=\"about-textarea\"\r\n          value={signInfo.desc}\r\n          onChange={handleDesc}\r\n          placeholder=\"Share something about yourself!:)\"\r\n        ></textarea>\r\n        <div className=\"btn-post-container\">\r\n          <button\r\n            className=\"btn\"\r\n            onClick={createDesc.bind(\r\n              this,\r\n              currentUser.uid,\r\n              signInfo.desc,\r\n              clearDesc\r\n            )}\r\n          >\r\n            Post\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n};\r\n\r\nexport default DescText;\r\n","import { createDesc } from \"../../firebase\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DescText from \"../DescText\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nconst Settings = (props) => {\r\n  const { fillAvatar, signInfo, handleDesc, clearDesc } = props;\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState();\r\n  const auth = getAuth();\r\n  const navigate = useNavigate();\r\n  let tempUser;\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, async (user) => {\r\n      if (user) {\r\n        tempUser = user;\r\n        setCurrentUser(tempUser);\r\n        setLoading(false);\r\n      } else {\r\n        navigate(\"/login\");\r\n      }\r\n    });\r\n  }, []);\r\n  if (!loading && currentUser) {\r\n    return (\r\n      <div className=\"settings\">\r\n        <h1 className=\"settings-name\">Settings</h1>\r\n        <h3>Profile Picture</h3>\r\n        <div className=\"settings-picture\">\r\n          <div className=\"settings-picture-container\">\r\n            <img src={signInfo.avatar} alt=\"\" />\r\n          </div>\r\n\r\n          <input\r\n            onChange={fillAvatar.bind(this, currentUser.uid)}\r\n            type=\"file\"\r\n          />\r\n        </div>\r\n        <div className=\"settings-about\">\r\n          <h4>About me</h4>\r\n          <DescText\r\n            clearDesc={clearDesc}\r\n            handleDesc={handleDesc}\r\n            createDesc={createDesc}\r\n            currentUser={currentUser}\r\n            signInfo={signInfo}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Loader\r\n          className=\"settings-loading\"\r\n          type=\"TailSpin\"\r\n          color=\"#00BFFF\"\r\n          height={50}\r\n          width={50}\r\n          timeout={3000}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Settings;\r\n","import { HashRouter, Route, Routes } from \"react-router-dom\";\r\nimport SignUp from \"./components/Auth/SignUp\";\r\nimport Login from \"./components/Auth/Login\";\r\nimport App from \"./components/Main/App\";\r\nimport About from \"./components/Profile/About\";\r\nimport SocialPage from \"./components/Main/SocialPage\";\r\nimport Settings from \"./components/Profile/Settings\";\r\n\r\nimport { useState } from \"react\";\r\nimport { uploadFiles, getAvatar } from \"./firebase\";\r\nimport dummy from \"./images/dummy.png\";\r\n\r\nconst RouteSwitch = (props) => {\r\n  const [signInfo, setSignInfo] = useState({});\r\n  const [postInfo, setPostInfo] = useState({});\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const fillAvatar = (id, e) => {\r\n    setSignInfo((prevState) => {\r\n      let av = e.target.files[0];\r\n      uploadFiles(av, id);\r\n      return { ...prevState, avatar: URL.createObjectURL(av) };\r\n    });\r\n  };\r\n\r\n  const setAvatar = async (id) => {\r\n    const tempAv = await getAvatar(id);\r\n    if (tempAv) {\r\n      setSignInfo((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          avatar: tempAv,\r\n        };\r\n      });\r\n    } else {\r\n      setSignInfo((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          avatar: dummy,\r\n        };\r\n      });\r\n    }\r\n  };\r\n  const clearPost = () => {\r\n    setPostInfo((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        post: \"\",\r\n      };\r\n    });\r\n  };\r\n  const handleDesc = (e) => {\r\n    setSignInfo((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        desc: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const clearDesc = (e) => {\r\n    setSignInfo((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        desc: \"\",\r\n      };\r\n    });\r\n  };\r\n  const handleName = (e) => {\r\n    setSignInfo((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        name: e.target.value,\r\n      };\r\n    });\r\n  };\r\n  const handlePost = (e) => {\r\n    setPostInfo((prevState) => {\r\n      return { ...prevState, post: e.target.value };\r\n    });\r\n  };\r\n  const handleEmail = (e) => {\r\n    setSignInfo((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        email: e.target.value,\r\n      };\r\n    });\r\n  };\r\n  const handlePassword = (e) => {\r\n    setSignInfo((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        password: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleConfirm = (e) => {\r\n    setSignInfo((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        confirm: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleUser = (e) => {\r\n    setSignInfo((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        user: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <App\r\n              signInfo={signInfo}\r\n              postInfo={postInfo}\r\n              handlePost={handlePost}\r\n              setAvatar={setAvatar}\r\n            />\r\n          }\r\n        >\r\n          <Route\r\n            path=\"\"\r\n            element={\r\n              <SocialPage\r\n                clearPost={clearPost}\r\n                postInfo={postInfo}\r\n                signInfo={signInfo}\r\n                handlePost={handlePost}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\":id\"\r\n            element={\r\n              <About\r\n                fillAvatar={fillAvatar}\r\n                clearPost={clearPost}\r\n                handlePost={handlePost}\r\n                postInfo={postInfo}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"settings\"\r\n            element={\r\n              <Settings\r\n                signInfo={signInfo}\r\n                handleDesc={handleDesc}\r\n                clearDesc={clearDesc}\r\n                currentUser={currentUser}\r\n                fillAvatar={fillAvatar}\r\n              />\r\n            }\r\n          />\r\n        </Route>\r\n        <Route\r\n          path=\"signup\"\r\n          element={\r\n            <SignUp\r\n              signInfo={signInfo}\r\n              handleName={handleName}\r\n              handleEmail={handleEmail}\r\n              handlePassword={handlePassword}\r\n              handleConfirm={handleConfirm}\r\n              handleUser={handleUser}\r\n              setSignInfo={setSignInfo}\r\n            />\r\n          }\r\n        />\r\n        <Route\r\n          path=\"login\"\r\n          element={\r\n            <Login\r\n              signInfo={signInfo}\r\n              handleEmail={handleEmail}\r\n              handlePassword={handlePassword}\r\n            />\r\n          }\r\n        />\r\n      </Routes>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default RouteSwitch;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RouteSwitch from './RouteSwitch';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <RouteSwitch />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}