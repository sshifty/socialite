{"version":3,"sources":["firebase.js","images/dummy.png","components/Auth/SignUp.js","components/Auth/Login.js","components/Main/Nav.js","components/Main/App.js","components/PostText.js","components/Post.js","components/Posts.js","components/Profile/AboutInfo.js","components/Profile/About.js","components/hooks.js","components/Main/SocialPage.js","components/DescText.js","components/Profile/Settings.js","RouteSwitch.js","index.js"],"names":["auth","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","db","getFirestore","storage","getStorage","signUpFunc","name","username","email","password","a","createUserWithEmailAndPassword","user","userColl","doc","uid","data","posts","desc","text","setDoc","createPost","userID","clearPost","dt","Date","now","toLocaleDateString","updateDoc","arrayUnion","post","date","createDesc","clearDesc","ListenForDocuments","unsubscribe","useState","queryResults","setQueryResults","useEffect","q","query","collection","onSnapshot","querySnapshot","users","forEach","push","id","loadAllDocuments","getAvatar","pathRef","ref","getDownloadURL","avatarUrl","SignUp","props","loading","setLoading","navigate","useNavigate","nameRef","useRef","nameError","userRef","userError","emailRef","emailError","passwordRef","passwordError","confirmRef","confirmError","formRef","setSignInfo","signInfo","handleName","handleEmail","handlePassword","handleUser","handleConfirm","onAuthStateChanged","handleSignUp","e","preventDefault","prevState","avatar","dummy","alert","showError","current","validity","valueMissing","textContent","tooShort","target","setCustomValidity","tooLong","typeMismatch","value","cleanIt","addEventListener","removeEventListener","className","onSubmit","htmlFor","onChange","type","minLength","maxLength","required","disabled","onClick","Login","handleLogin","signInWithEmailAndPassword","console","log","placeholder","to","Nav","setAvatar","userInfo","handleLogOut","signOut","src","alt","icon","faSignOutAlt","App","tempUser","currentUser","setCurrentUser","map","PostText","handlePost","postInfo","bind","Post","then","url","delBut","faTrash","Posts","sortedPost","temp","JSON","parse","stringify","item","sort","prev","curr","AboutInfo","displayUser","LoaderTemp","color","height","width","timeout","metadata","createdAt","signInTime","faUserEdit","About","useParams","userStats","GetUserStats","fillAvatar","SocialPage","DescText","handleDesc","Settings","RouteSwitch","setPostInfo","av","files","file","contentType","storageRef","uploadBytesResumable","uploadBytes","snapshot","uploadFiles","URL","createObjectURL","tempAv","path","element","confirm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5628a4c.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport {useState,useEffect} from 'react';\r\nimport {getDocs, query, getFirestore , collection, onSnapshot,doc,setDoc,updateDoc,arrayUnion, orderBy} from \"firebase/firestore\"\r\nimport { getDownloadURL, getStorage, ref, uploadBytesResumable , uploadBytes} from \"firebase/storage\";\r\n\r\n\r\nimport {getAuth,signInWithEmailAndPassword,createUserWithEmailAndPassword,onAuthStateChanged,signOut} from \"firebase/auth\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCqwurAoUtTmnIn_PhuZrZ5Z_1Ih647Nc0\",\r\n  authDomain: \"socialite-adbf5.firebaseapp.com\",\r\n  projectId: \"socialite-adbf5\",\r\n  storageBucket: \"socialite-adbf5.appspot.com\",\r\n  messagingSenderId: \"17842913995\",\r\n  appId: \"1:17842913995:web:70a4c7963d399447b7d14e\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth= getAuth();\r\nconst db = getFirestore();\r\nconst storage=getStorage();\r\nexport const logInFunc=(email,password)=>{    \r\n    return signInWithEmailAndPassword(auth ,email,password);\r\n}\r\n\r\nexport const signUpFunc=async (name,username,email,password)=>{    \r\n  let {user}= await createUserWithEmailAndPassword(auth ,email,password);\r\n  const userColl=doc(db,`users/${user.uid}`);\r\n        const data={\r\n            name,\r\n            username,\r\n            posts:[\r\n              {\r\n              }\r\n            ],\r\n            desc:{\r\n              text:''\r\n            },\r\n            email:user.email,                \r\n        };\r\n  await setDoc(userColl,data);\r\n  return user;\r\n}\r\n\r\nexport const createPost = async (userID,text,clearPost)=>{\r\n  const dt=Date.now();\r\n  const now=new Date().toLocaleDateString();\r\n  const userColl=doc(db,`users/${userID}`);\r\n  await updateDoc(userColl, {\r\n    posts: arrayUnion({post:text,date:now,dt:dt})\r\n});\r\n  clearPost();\r\n}\r\n\r\nexport const createDesc = async (userID,text,clearDesc)=>{\r\n  const dt=Date.now();\r\n  const now=new Date().toLocaleDateString();\r\n  const userColl=doc(db,`users/${userID}`);\r\n  await updateDoc(userColl, {\r\n    desc: {\r\n      text:text,\r\n      date:now\r\n    }\r\n});\r\n  clearDesc();\r\n};\r\n\r\n\r\nexport const useAuth=()=>{\r\n  const [currentUser,setCurrentUser]=useState();\r\n  useEffect(()=>{\r\n    onAuthStateChanged(auth,user=>{\r\n      const unsub=setCurrentUser(user);\r\n      return unsub;\r\n    })\r\n  },[])\r\n  return currentUser;\r\n}\r\n\r\nexport const logOut=()=>{\r\n  return signOut(auth);\r\n}\r\n\r\n\r\n\r\nexport const ListenForDocuments = () => {\r\n  const [queryResults, setQueryResults] = useState(null);\r\n  let unsubscribe;\r\n\r\n  const loadAllDocuments = () => {\r\n    const q = query(collection(db, \"users\"));\r\n    unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n      const users = [];\r\n      querySnapshot.forEach((doc) => {\r\n        users.push([\r\n          {\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          },\r\n        ]);\r\n      });\r\n      setQueryResults(users);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllDocuments();\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n  return [queryResults, setQueryResults];\r\n};\r\n\r\n\r\nexport const uploadFiles=(file,id)=>{\r\n if(!file) return;\r\n\r\nconsole.log(file)\r\nconst metadata={\r\n  contentType: file.type\r\n}\r\n const storageRef=ref(storage,`files/${id}`);\r\n const uploadTask=uploadBytesResumable(storageRef,file);\r\n\r\nuploadBytes(storageRef, file,metadata).then((snapshot) => {\r\n  console.log('Uploaded a blob or file!',snapshot);\r\n});\r\n}\r\n\r\nexport const getAvatar=async id=>{\r\n  const pathRef=ref(storage,`files/${id}`);\r\n  const avatarUrl=await getDownloadURL(pathRef)\r\n \r\n  \r\n  \r\n  return avatarUrl;\r\n}","export default __webpack_public_path__ + \"static/media/dummy.8973ad91.png\";","import formstyle from '../../style/formstyle.css';\r\nimport {useRef,useEffect,useState} from 'react';\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport { signUpFunc } from '../../firebase';\r\nimport dummy from '../../images/dummy.png';\r\n\r\n\r\n\r\n\r\nconst SignUp=props=>{\r\n\r\n    const [loading, setLoading] =useState(true);\r\n    \r\n    let navigate = useNavigate();\r\n\r\n    const nameRef=useRef();\r\n    const nameError=useRef();\r\n    const userRef=useRef();\r\n    const userError=useRef();\r\n    const emailRef=useRef(\"\");\r\n    const emailError=useRef();\r\n    const passwordRef=useRef(\"\");\r\n    const passwordError=useRef();\r\n    const confirmRef=useRef();\r\n    const confirmError=useRef();\r\n    const formRef=useRef(\"\");\r\n    const auth=getAuth();\r\n    const {setSignInfo,signInfo,handleName,handleEmail,handlePassword,handleUser,handleConfirm}=props;\r\n    \r\n    useEffect(()=>{        \r\n        onAuthStateChanged(auth, (user) => {\r\n            if (user) {\r\n              const uid = user.uid;\r\n              \r\n              navigate('/');\r\n              // ...\r\n            } else {\r\n              setLoading(false);\r\n              \r\n            }\r\n        });\r\n    },[])\r\n  \r\n    const handleSignUp= async(e)=>{\r\n        setLoading(true);\r\n        e.preventDefault();\r\n        try{\r\n            \r\n             await signUpFunc(signInfo.name,signInfo.user,signInfo.email,signInfo.password);        \r\n             setSignInfo(prevState=>{\r\n                 return {\r\n                     ...prevState,\r\n                     avatar:dummy\r\n                 }\r\n             })  \r\n             navigate('/');\r\n             \r\n             \r\n        }catch(err){\r\n           alert(\"errorxd\",err)\r\n           setLoading(false);\r\n           \r\n        }\r\n        \r\n   }\r\n\r\n    \r\n    const showError=(e)=>{\r\n        \r\n        if(emailRef.current.validity.valueMissing){\r\n            emailError.current.textContent=\"Cannot be empty\";\r\n        }else if(emailRef.current.validity.tooShort){\r\n            e.target.setCustomValidity(\"email must be valid\");\r\n            emailError.current.textContent=\"Email must be valid\";\r\n        }else if(emailRef.current.validity.tooLong){\r\n            emailError.current.textContent=\"To long\";\r\n        }else if(emailRef.current.validity.typeMismatch){\r\n            emailError.current.textContent=\"Enter an email\";\r\n\r\n        }else{\r\n            e.target.setCustomValidity(\"\");\r\n            emailError.current.textContent=\"\";\r\n        }\r\n\r\n        if(nameRef.current.validity.valueMissing){\r\n            nameError.current.textContent=\"Cannot be empty\";\r\n        }else if(nameRef.current.validity.tooShort){\r\n            \r\n            nameError.current.textContent=\"To short\";\r\n        }else if(nameRef.current.validity.tooLong){\r\n            nameError.current.textContent=\"To long\";\r\n        }else if(nameRef.current.validity.typeMismatch){\r\n            nameError.current.textContent=\"Enter an name\";\r\n\r\n        }else{\r\n            \r\n            nameError.current.textContent=\"\";\r\n        }\r\n\r\n        if(userRef.current.validity.valueMissing){\r\n            userError.current.textContent=\"Cannot be empty\";\r\n        }else if(userRef.current.validity.tooShort){\r\n            \r\n            userError.current.textContent=\"To short\";\r\n        }else if(userRef.current.validity.tooLong){\r\n            userError.current.textContent=\"To long\";\r\n        }else if(userRef.current.validity.typeMismatch){\r\n            userError.current.textContent=\"Enter an user\";\r\n\r\n        }else{\r\n            \r\n            userError.current.textContent=\"\";\r\n        }\r\n\r\n        if(passwordRef.current.validity.valueMissing){\r\n            passwordError.current.textContent=\"Cannot be empty\";\r\n        }else if(passwordRef.current.validity.tooShort){\r\n            \r\n            passwordError.current.textContent=\"To short\";\r\n        }else if(passwordRef.current.validity.tooLong){\r\n            passwordError.current.textContent=\"To long\";\r\n        }else if(passwordRef.current.validity.typeMismatch){\r\n            passwordError.current.textContent=\"Enter an password\";\r\n\r\n        }else{\r\n            \r\n            passwordError.current.textContent=\"\";\r\n        }\r\n        \r\n        \r\n        if(confirmRef.current.validity.valueMissing){\r\n            confirmError.current.textContent=\"Cannot be empty\";\r\n        }else if(confirmRef.current.validity.tooShort){\r\n            \r\n            confirmError.current.textContent=\"Too short\";\r\n        }else if(confirmRef.current.validity.tooLong){\r\n            confirmError.current.textContent=\"Too long\";\r\n        }else if(confirmRef.current.validity.typeMismatch){\r\n            confirmError.current.textContent=\"Enter an confirm\";\r\n\r\n        }else if(confirmRef.current.value!== passwordRef.current.value){\r\n            e.target.setCustomValidity(\"Password must match\");\r\n            confirmError.current.textContent=\"Password must match\";\r\n\r\n        }else{\r\n            confirmError.current.textContent=\"\";\r\n\r\n        }\r\n            \r\n        \r\n    }\r\n    useEffect(()=>{\r\n        if(!loading){\r\n            const cleanIt=formRef.current;\r\n            formRef.current.addEventListener(\"input\",e=>{            \r\n                    showError(e);            \r\n             });\r\n\r\n             return ()=>{\r\n                 \r\n                 cleanIt.removeEventListener(\"input\",e=>{\r\n                     showError(e);\r\n                 })\r\n             }\r\n        }\r\n        \r\n        \r\n    })\r\n    if(loading){\r\n        return <h1>Loading...</h1>\r\n    }else{\r\n        return(\r\n            <div className=\"form-page\">\r\n                <form  ref={formRef} onSubmit={handleSignUp} className=\"form-container\">\r\n                    <h1 className=\"app-name\">Socialite</h1>\r\n                    <div className=\"input-wrapper\">\r\n                        <label htmlFor=\"signUp-fullName\">Full Name</label>\r\n                        <input ref={nameRef} onChange={handleName} type=\"text\" minLength={2} maxLength={30} name=\"name\" id=\"signUp-fullName\" required />\r\n                        <span ref={nameError} className='error span-error'></span>\r\n                    </div>\r\n                    <div className=\"input-wrapper\">\r\n                        <label htmlFor=\"signUp-userName\">User Name</label>\r\n                        <input ref={userRef} onChange={handleUser}  minLength={2} maxLength={20} type=\"text\" name=\"user\" id=\"signUp-userName\" required/>\r\n                        <span ref={userError} className='error span-username'></span>\r\n                    </div>\r\n                    <div className=\"input-wrapper\">\r\n                        <label htmlFor=\"signUp-email\">Email</label>\r\n                        <input ref={emailRef} onChange={handleEmail} minLength={7} maxLength={30} type=\"email\" name=\"email\" id=\"signUp-email\" required/>\r\n                        <span ref={emailError} className='error span-email'></span>\r\n                    </div>\r\n                    <div className=\"input-wrapper\">\r\n                        <label htmlFor=\"signUp-password\">Password</label>\r\n                        <input ref={passwordRef} onChange={handlePassword} minLength={6} maxLength={20}  type=\"password\" name=\"password\" id=\"signUp-password\" required/>\r\n                        <span ref={passwordError} className='error span-password'></span>\r\n                    </div>\r\n                    <div className=\"input-wrapper\">\r\n                        <label htmlFor=\"signUp-confirm\">Confirm Password</label>\r\n                        <input ref={confirmRef} onChange={handleConfirm} minLength={6} maxLength={20} type=\"password\" name=\"confirm\" id=\"signUp-confirm\" required/>\r\n                        <span ref={confirmError} className='error span-confirm'></span>\r\n                    </div>\r\n                    <div className=\"button-flex-container\">\r\n                        <button className='btn btn-signup' disabled={loading} type=\"submit\">Sign Up</button>\r\n                        <button className='btn btn-submit' onClick={()=>navigate('../login')} disabled={loading} type=\"submit\">Back To Login</button>\r\n    \r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n\r\n    }\r\n   \r\n\r\n    \r\n};\r\n\r\nexport default SignUp;","import { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport {useRef,useEffect,useState} from 'react';\r\nimport {Link,useNavigate} from 'react-router-dom';\r\nimport { logInFunc } from '../../firebase';\r\n\r\n\r\n\r\nconst Login=props=>{\r\n    \r\n   \r\n    const {handleEmail,handlePassword,signInfo}=props;\r\n    const emailRef=useRef();\r\n    const emailError=useRef();\r\n    const passwordRef=useRef();\r\n    const passwordError=useRef();\r\n    const formRef=useRef();\r\n    let navigate = useNavigate();\r\n    const auth=getAuth();\r\n   \r\n    const [loading,setLoading]=useState(true);\r\n    useEffect(()=>{        \r\n        onAuthStateChanged(auth, (user) => {\r\n            if (user) {\r\n              const uid = user.uid;\r\n              \r\n              navigate('/');\r\n              // ...\r\n            } else {\r\n              setLoading(false);\r\n              \r\n            }\r\n        });\r\n    },[])\r\n\r\n  \r\n    const handleLogin=async e=>{\r\n        e.preventDefault();\r\n        try{\r\n            await logInFunc(signInfo.email,signInfo.password);\r\n            navigate('/');\r\n\r\n        }catch(err){\r\n           \r\n            console.log(err)\r\n            alert(\"Could not login\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    const showError=(e)=>{\r\n        \r\n        \r\n        if(emailRef.current.validity.valueMissing){\r\n            emailError.current.textContent=\"Cannot be empty\";\r\n        }else if(emailRef.current.validity.tooShort){\r\n            e.target.setCustomValidity(\"email must be valid\");\r\n            emailError.current.textContent=\"Email must be valid\";\r\n        }else if(emailRef.current.validity.tooLong){\r\n            emailError.current.textContent=\"To long\";\r\n        }else if(emailRef.current.validity.typeMismatch){\r\n            emailError.current.textContent=\"Enter an email\";\r\n\r\n        }else{\r\n            e.target.setCustomValidity(\"\");\r\n            emailError.current.textContent=\"\";\r\n        }\r\n\r\n       \r\n    }\r\n    \r\n        useEffect(()=>{\r\n            if(!loading){\r\n                const cleanIt=formRef.current;\r\n                formRef.current.addEventListener(\"input\",e=>{            \r\n                        showError(e);            \r\n                 });\r\n\r\n                 return ()=>{\r\n                     \r\n                     cleanIt.removeEventListener(\"input\",e=>{\r\n                         showError(e);\r\n                     })\r\n                 }\r\n            }\r\n            \r\n            \r\n        })\r\n\r\n    \r\n    if(loading){\r\n        return <h1>Loading...</h1>\r\n    }else{\r\n        return(\r\n            \r\n            <div className=\"form-page\">\r\n                <form  onSubmit={handleLogin} ref={formRef} className=\"form-container login\">                \r\n                    <h1 className=\"app-name\">Socialite</h1>\r\n                    <div className=\"input-wrapper\">\r\n                        <label htmlFor=\"login-email\">Email</label>\r\n                        <input onChange={handleEmail} ref={emailRef} minLength={7} maxLength={30} type=\"email\" name=\"email\" id=\"login-email\" placeholder=\"Type your email\" required/>\r\n                        <span ref={emailError} className='error span-email'></span>\r\n                    </div>\r\n                    <div className=\"input-wrapper\">\r\n                        <label htmlFor=\"login-password\">Password</label>\r\n                        <input onChange={handlePassword} ref={passwordRef} minLength={6} maxLength={20}  type=\"password\" name=\"password\" id=\"login-password\" placeholder=\"Type your password\" required/>\r\n                        <span ref={passwordError} className='error span-password'></span>\r\n                    </div>\r\n                    <div className=\"button-flex-container\">\r\n                        <div className=\"btn-div\">\r\n                            <button  type=\"submit\"  className='btn btn-submit' type=\"submit\">Login</button>\r\n                            \r\n                        </div>\r\n                        <div className=\"btn-div\">\r\n                            <Link to=\"../signup\">\r\n                                <button className='btn btn-signup'>Sign up</button>                            \r\n                            </Link>\r\n                        </div>\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n        \r\n    }\r\n};\r\n\r\nexport default Login;","import dummy from '../../images/dummy.png'\r\nimport nav from '../../style/nav.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { logOut } from '../../firebase';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = props=>{\r\n    const {setAvatar,signInfo,userInfo}=props;\r\n    let name,id;\r\n    if(!userInfo){\r\n        name='';\r\n        id='';\r\n    }else{\r\n        name=userInfo[0].data.name;\r\n        id=userInfo[0].id\r\n    };\r\n\r\n    const handleLogOut= async()=>{\r\n        try{\r\n          await logOut();    \r\n        }catch{\r\n          alert(\"ERROR LOGGING OUT\")\r\n        }\r\n      }\r\n    \r\n    return(\r\n        <nav className=\"navbar\">\r\n            <div className=\"nav-container\">\r\n                <Link className='app-logo' to=\"\">\r\n                 <h1 >Socialite</h1>\r\n                </Link>\r\n                <div className=\"nav-right\">\r\n                    <div className=\"avatar-container container\">\r\n                        <img src={signInfo.avatar?signInfo.avatar:dummy} alt=\"\" />\r\n                    </div>\r\n                    <Link className=\"username\" to={id}>\r\n                        <div >{name}</div>\r\n\r\n                    </Link>                    \r\n                    <div className=\"settings-container container\">\r\n                        <button onClick={handleLogOut} className=\"btn-settings \">\r\n                            <FontAwesomeIcon icon={faSignOutAlt}></FontAwesomeIcon>\r\n                         </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Nav;","import { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport {useNavigate,Outlet} from 'react-router-dom';\nimport {useState, useEffect} from 'react';\nimport { ListenForDocuments } from \"../../firebase\";\nimport Nav from './Nav';\n\n\nimport AppStyle from '../../style/AppStyle.css';\n\nconst  App=props=> {  \n  const{setAvatar,signInfo}=props;\n  const auth = getAuth();\n  const [loading,setLoading]=useState(true);  \n  const [currentUser,setCurrentUser]=useState();\n  let navigate = useNavigate();    \n  let tempUser,userInfo;\n  const [queryResults,setQueryResults]=ListenForDocuments();\n\n\n   useEffect(()=>{        \n      onAuthStateChanged(auth, async (user) => {\n          if (user) {\n            tempUser=user; \n            setAvatar(tempUser.uid);                   \n            setCurrentUser(tempUser);\n            setLoading(false);\n          } else {\n            navigate('/login');\n          };\n      });\n      \n  },[])\n  \n \n\n  if(queryResults && currentUser){    \n    queryResults.map(query=>{\n      if(query[0].id===currentUser.uid){\n        userInfo=query;        \n      }\n      \n    })\n  }\n\n\n if (loading) {\n   return <h1>Loading...</h1>\n } else {\n   return (\n     <div className=\"App\">\n       <Nav \n       setAvatar={setAvatar}\n       signInfo={signInfo}\n       userInfo={userInfo}\n       currentUser={currentUser}/>\n       <div className=\"center\">\n        <Outlet />\n\n       </div>\n       \n     </div>\n   );\n }\n}\n\nexport default App;\n\n","import { createPost } from \"../firebase\";\r\n\r\n\r\nconst PostText =props=>{\r\n    const {clearPost,handlePost,createPost,currentUser,postInfo}=props;\r\n    return (\r\n        <div className=\"post-textarea\">\r\n            <textarea  value={postInfo.post} className=\"textarea-style\" onChange={handlePost} name=\"\" id=\"\"  placeholder=\"Make A post\">\r\n            </textarea>\r\n            <div className=\"btn-post-container\">\r\n                <button onClick={createPost.bind(this,currentUser.uid,postInfo.post,clearPost)} className=\"btn btn-post\">Post</button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostText;","import { getAvatar } from \"../firebase\";\r\nimport dummy from \"../images/dummy.png\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport deleteIcon from '../images/delete.png';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Post = (props) => {\r\n    let navigate=useNavigate();\r\n  const [avatar, setAvatar] = useState();\r\n  const { name, id, post, date, currentUser } = props;\r\n  \r\n  if (id) {\r\n    getAvatar(id).then((url) => {\r\n      setAvatar(url);\r\n    });\r\n  }\r\n  \r\n  if (currentUser) {\r\n    const delBut = currentUser.uid === id ?\r\n     <button className=\"btn-del\">\r\n       <FontAwesomeIcon icon={faTrash}>\r\n\r\n       </FontAwesomeIcon>\r\n     </button> : null;\r\n    if(!post){\r\n      return null;\r\n    }else{\r\n      return (\r\n        <div className=\"post-card\">\r\n          <div className=\"post-header\">\r\n            <div className=\"user-avatar\">\r\n              <div className=\"post-avatar-container\">\r\n                <img\r\n                  src={avatar ? avatar : dummy}\r\n                  alt=\"avatar pics\"\r\n                  className=\"post-avatar\"\r\n                />\r\n              </div>\r\n              <p className=\"post-name\" onClick={()=>navigate(`../${id}`)}>{name}</p>\r\n              \r\n              <p className=\"date\">posted {date}</p>\r\n            </div>\r\n            <div className=\"delete-btn-container\">\r\n              {delBut}\r\n  \r\n            </div>\r\n          </div>\r\n          <div className=\"post-content\">{post}</div>\r\n          \r\n        </div>\r\n      );\r\n\r\n    }\r\n  }else {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n};\r\n\r\nexport default Post;\r\n","import { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { query } from \"firebase/firestore\";\r\nimport { useState,useEffect } from \"react\";\r\n\r\nimport Post from './Post';\r\nconst Posts=props=>{  \r\n    const {queryResults}=props;\r\n    const auth = getAuth();\r\n    const [currentUser,setCurrentUser]=useState(); \r\n    let tempUser;\r\n    useEffect(()=>{        \r\n        onAuthStateChanged(auth, async (user) => {\r\n            if (user) {\r\n            tempUser=user;         \r\n            setCurrentUser(tempUser);\r\n            \r\n            } else {\r\n            \r\n            };\r\n        });\r\n        \r\n    },[])\r\n    \r\n   let tempPosts=[];\r\n   let temp=[];\r\n   let sortedPost;\r\n\r\n    if(queryResults){  \r\n          \r\n      tempPosts=JSON.parse(JSON.stringify(queryResults));\r\n      tempPosts.map(item=>{\r\n        if(!item[0]){\r\n          item.data.posts.map(post=>{\r\n            temp.push(\r\n              {\r\n                name:item.data.name,\r\n                id:item.id,\r\n                date:post.date,\r\n                dt:post.dt,\r\n                post:post.post\r\n              }\r\n            )\r\n          })\r\n        }else{\r\n          item[0].data.posts.map(post=>{\r\n            temp.push({\r\n              name:item[0].data.name,\r\n              id:item[0].id,\r\n              date:post.date,\r\n              dt:post.dt,\r\n              post:post.post\r\n            })\r\n          })\r\n\r\n        }\r\n      })\r\n       sortedPost=temp.sort((prev,curr)=>{         \r\n         return prev.dt>=curr.dt?-1:1;\r\n       });      \r\n        \r\n        return (\r\n          <div className=\"posts-container\">\r\n          {sortedPost.map(post=>(\r\n             <Post \r\n              name={post.name}\r\n              id={post.id}\r\n              post={post.post}\r\n              date={post.date}\r\n              currentUser={currentUser}\r\n            />\r\n          ))}\r\n            {/* {queryResults.map((query) => {\r\n                \r\n              return query[0].data.posts.map((post) => {\r\n                return <Post \r\n                    data={query[0].data}\r\n                    id={query[0].id}\r\n                    post={post}\r\n                    currentUser={currentUser}\r\n                />\r\n              });\r\n            })} */}\r\n          </div>\r\n        );\r\n    }else{\r\n        return <h1>Something happened</h1>\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default Posts;","import { useNavigate } from \"react-router-dom\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport { faUserEdit } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst AboutInfo=props=>{\r\n    let navigate=useNavigate();\r\n    const {displayUser,currentUser}=props;\r\n    \r\n    const LoaderTemp=<Loader\r\n            type=\"Puff\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000} //3 secs\r\n        />;\r\n    if(currentUser && displayUser){\r\n        \r\n        const date= currentUser.auth.currentUser.metadata.createdAt;;\r\n        console.log(displayUser)\r\n        const signInTime=new Date(date*1).toLocaleDateString();;\r\n        return(\r\n            <div className=\"info\">\r\n                <div className=\"info-header\">\r\n                    <h3>About Me</h3>\r\n                        <div className=\"btn-edit-container\">\r\n                            <button onClick={()=>{navigate(\"../settings\")}} className=\"btn-edit\">\r\n                                <FontAwesomeIcon icon={faUserEdit}/>\r\n                            </button>\r\n                        </div>\r\n                    \r\n                </div>\r\n                <div className=\"info-description\">\r\n                    {displayUser[0].data.desc.text}\r\n                </div>\r\n                <div className=\"line-break\"></div>\r\n                <p className=\"created-p\">Created on: {signInTime}</p> \r\n            </div>\r\n        );\r\n\r\n    }else{\r\n        return(\r\n            LoaderTemp\r\n        ) \r\n    }    \r\n};\r\n\r\n\r\nexport default AboutInfo;","import {useState, useEffect} from 'react';\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { GetUserStats } from '../hooks';\r\nimport { ListenForDocuments } from '../../firebase';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getAvatar,createPost } from \"../../firebase\";\r\nimport dummy from '../../images/dummy.png';\r\nimport PostText from '../PostText';\r\nimport Posts from '../Posts';\r\nimport AboutInfo from './AboutInfo';\r\n\r\n\r\n\r\n\r\nconst About=props=>{\r\n    let { id } = useParams();\r\n    const auth=getAuth();\r\n    let tempUser,userInfo,displayUser;\r\n    const [queryResults,setQueryResults]=ListenForDocuments();\r\n    const [currentUser,setCurrentUser]=useState();\r\n    const [avatar,setAvatar]=useState();\r\n    const userStats=GetUserStats();\r\n    \r\n    const {fillAvatar,clearPost,handlePost,postInfo}=props;\r\n    \r\n     useEffect(()=>{        \r\n        onAuthStateChanged(auth, async (user) => {\r\n            if (user) {\r\n              tempUser=user;         \r\n              setCurrentUser(tempUser);\r\n              \r\n            } \r\n        });\r\n        \r\n    },[]);\r\n    if(queryResults && currentUser){\r\n        getAvatar(id)\r\n        .then(url=>{\r\n            setAvatar(url);\r\n        })    \r\n        queryResults.map(query=>{\r\n          if(query[0].id===currentUser.uid){\r\n            userInfo=query;        \r\n          }\r\n          if(query[0].id === id){\r\n              displayUser=query;\r\n          }\r\n          \r\n        })\r\n      }\r\n\r\n      console.log(displayUser)\r\n    \r\n    console.log(userStats)\r\n    if(userInfo && displayUser){\r\n        \r\n        return (\r\n            <div className=\"about-page\">\r\n            <div className=\"about-header\">\r\n                <div className=\"about-img-container\">\r\n                    <img src={avatar?avatar:dummy} alt=\"\" className=\"avatar\" />\r\n                </div>\r\n                <h1 className=\"about-name\">{displayUser[0].data.name}</h1>\r\n            </div>\r\n            <div className=\"about-main\">\r\n                <div className=\"about-info\">\r\n                    <AboutInfo \r\n                    displayUser={displayUser}\r\n                    currentUser={currentUser}\r\n                    fillAvatar={fillAvatar}\r\n                    />\r\n\r\n                </div>\r\n                <div className=\"about-posts\">\r\n                     { currentUser.uid===id?<PostText \r\n                         clearPost={clearPost}\r\n                         handlePost={handlePost}\r\n                         createPost={createPost}\r\n                         postInfo={postInfo}\r\n                         currentUser={currentUser}\r\n                     />:null}\r\n                    <Posts queryResults={displayUser} />\r\n\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n\r\n    }else{\r\n        return (\r\n            <h1>Loading...</h1>\r\n        )\r\n    }\r\n};\r\n\r\nexport default About;","import { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport {useState,useEffect} from 'react';\r\nimport { ListenForDocuments } from \"../firebase\";\r\n\r\nexport const GetUserStats=()=>{\r\n    let userStats;\r\n\r\n    const auth=getAuth();\r\n    let tempUser;\r\n    const [currentUser,setCurrentUser]=useState();\r\n    const [queryResults,setQueryResults]=ListenForDocuments();\r\n    useEffect(()=>{        \r\n        onAuthStateChanged(auth, async (user) => {\r\n            if (user) {\r\n              tempUser=user;         \r\n              setCurrentUser(tempUser);\r\n             \r\n            }\r\n        });\r\n        \r\n    },[]);\r\n    if(queryResults && currentUser){    \r\n        queryResults.map(query=>{\r\n          if(query[0].id===currentUser.uid){\r\n            userStats=query;     \r\n          }\r\n          \r\n        })\r\n      }\r\n    return userStats;\r\n}","import { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport {useState, useEffect} from 'react';\r\nimport { createPost } from '../../firebase';\r\nimport Posts from '../Posts';\r\nimport PostText from '../PostText';\r\nimport { ListenForDocuments } from \"../../firebase\";\r\n\r\n\r\n\r\n\r\nconst  SocialPage=props=> {  \r\n  const{signInfo,clearPost,handlePost,postInfo}=props;\r\n  const auth = getAuth();  \r\n  const [currentUser,setCurrentUser]=useState();\r\n  const [loading,setLoading]=useState(true);      \r\n  let tempUser,userInfo;\r\n  const [queryResults,setQueryResults]=ListenForDocuments();\r\n\r\n\r\n   useEffect(()=>{        \r\n      onAuthStateChanged(auth, async (user) => {\r\n          if (user) {\r\n            tempUser=user;         \r\n            setCurrentUser(tempUser);    \r\n            setLoading(false);        \r\n          }\r\n      });      \r\n  },[])\r\n  \r\n \r\n  if(queryResults && currentUser){ \r\n    console.log(\"social\",queryResults)\r\n    queryResults.map(query=>{\r\n      if(query[0].id===currentUser.uid){\r\n        userInfo=query;     \r\n           \r\n      }\r\n      \r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n    if(loading){\r\n        return <h1>Loading...</h1>\r\n    }\r\n    else{\r\n        return (   \r\n          \r\n            <div className=\"social-page\">\r\n                <PostText  \r\n                    handlePost={handlePost}\r\n                    createPost={createPost} \r\n                    currentUser={currentUser}\r\n                    postInfo={postInfo}\r\n                    clearPost={clearPost}\r\n                    \r\n                    />\r\n              \r\n              <Posts \r\n                signInfo={signInfo}\r\n                queryResults={queryResults}\r\n              />\r\n            </div>\r\n         \r\n        );\r\n\r\n    }\r\n }\r\n\r\n\r\nexport default SocialPage;\r\n","import { createPost } from \"../firebase\";\r\nimport AppStyle from '../style/AppStyle.css';\r\n\r\nconst DescText =props=>{\r\n    const {clearDesc,handleDesc,createDesc,currentUser,signInfo}=props;\r\n    \r\n    if(currentUser){\r\n        return (\r\n            <div className=\"post-textarea\">\r\n                <textarea  id=\"about-textarea\" value={signInfo.desc}  onChange={handleDesc} name=\"\" id=\"\"  placeholder=\"Share something about yourself!:)\">\r\n                </textarea>\r\n                <div className=\"btn-post-container\">\r\n                    <button  className=\"btn\" onClick={createDesc.bind(this,currentUser.uid,signInfo.desc,clearDesc)} >Post</button>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n\r\n    }else{\r\n        return <h1>Loading...</h1>\r\n    }\r\n}\r\n\r\nexport default DescText;","import { createDesc } from \"../../firebase\";\r\nimport { getAuth ,onAuthStateChanged} from \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DescText from \"../DescText\";\r\nimport {useState,useEffect} from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nconst Settings=props=>{\r\n\r\n    const {fillAvatar,signInfo,handleDesc,clearDesc}=props;\r\n    const [currentUser,setCurrentUser]=useState();\r\n    const [loading,setLoading]=useState();\r\n    const auth=getAuth();\r\n    const navigate=useNavigate();\r\n    let tempUser;\r\n    \r\n    useEffect(()=>{        \r\n        onAuthStateChanged(auth, async (user) => {\r\n            if (user) {\r\n              tempUser=user;                                \r\n              setCurrentUser(tempUser);\r\n              setLoading(false);\r\n            } else {\r\n              navigate('/login');\r\n            };\r\n        });\r\n        \r\n    },[])\r\n    if(!loading && currentUser){\r\n        console.log(currentUser)\r\n        \r\n        return (\r\n            <div className=\"settings\">\r\n                <h1 className=\"settings-name\">Settings</h1>\r\n                <h3>Profile Picture</h3>\r\n                <div className=\"settings-picture\">\r\n                    <div className=\"settings-picture-container\">\r\n                        <img src={signInfo.avatar} alt=\"\" />\r\n                    </div>\r\n                    \r\n                    <input  onChange={fillAvatar.bind(this,currentUser.uid)} type=\"file\" />\r\n\r\n                </div>\r\n                <div className=\"settings-about\">\r\n                    <h4>About me</h4>\r\n                    <DescText\r\n                     clearDesc={clearDesc}\r\n                     handleDesc={handleDesc}\r\n                     createDesc={createDesc}\r\n                     currentUser={currentUser}\r\n                     signInfo={signInfo}\r\n                       />\r\n                </div>\r\n            </div>\r\n        );\r\n    }else{\r\n        return <div >\r\n            <Loader className=\"settings-loading\" type=\"TailSpin\"\r\n            color=\"#00BFFF\"\r\n            height={50}\r\n            width={50}\r\n            timeout={3000}/>\r\n        </div>\r\n    }\r\n};\r\n\r\nexport default Settings;\r\n","import { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport SignUp from './components/Auth/SignUp';\r\nimport Login from './components/Auth/Login';\r\nimport App from './components/Main/App';\r\nimport About from './components/Profile/About';\r\nimport SocialPage from \"./components/Main/SocialPage\";\r\nimport Settings from \"./components/Profile/Settings\";\r\n\r\nimport {useState,useEffect} from 'react';\r\nimport { uploadFiles,getAvatar } from \"./firebase\";\r\nimport dummy from './images/dummy.png'\r\n\r\n\r\n\r\nconst RouteSwitch =props=>{   \r\n  \r\n     const [signInfo,setSignInfo]= useState({}); \r\n     const [postInfo,setPostInfo] =useState({}); \r\n     const [currentUser,setCurrentUser]=useState();\r\n   \r\n     \r\n    \r\n\r\n     \r\n    const fillAvatar = (id,e) => {\r\n    \r\n      setSignInfo((prevState) => {        \r\n        let av = e.target.files[0];\r\n        console.log(\"type\", e.target.files[0])\r\n        uploadFiles(av,id);        \r\n        return { ...prevState, avatar:URL.createObjectURL(av)};\r\n      });\r\n    }; \r\n    \r\n    const setAvatar=async id=>{\r\n        const tempAv=await getAvatar(id);\r\n        console.log(JSON.stringify(tempAv))\r\n        if(tempAv){\r\n            setSignInfo(prevState=>{\r\n                return{\r\n                    ...prevState,\r\n                    avatar:tempAv \r\n                }\r\n            })\r\n\r\n        }else{\r\n            setSignInfo(prevState=>{\r\n                return{\r\n                    ...prevState,\r\n                    avatar:dummy\r\n                }\r\n            })\r\n        }\r\n\r\n        \r\n       \r\n        \r\n    }\r\n    const clearPost=()=>{\r\n        setPostInfo(prevState=>{\r\n            return{\r\n                ...prevState,\r\n                post:''\r\n            }\r\n        })\r\n    }\r\n     const handleDesc=e=>{\r\n         setSignInfo(prevState=>{\r\n             return {\r\n                 ...prevState,\r\n                 desc:e.target.value\r\n             }\r\n         });\r\n     };\r\n\r\n     const clearDesc=e=>{\r\n         setSignInfo(prevState=>{\r\n             return {\r\n                 ...prevState,\r\n                 desc:''\r\n             }\r\n         })\r\n     }\r\n     const handleName=e=>{\r\n        setSignInfo(prevState=>{\r\n            return {\r\n                ...prevState,\r\n                name:e.target.value\r\n            }\r\n        });\r\n     };\r\n     const handlePost=e=>{\r\n         setPostInfo(prevState=>{\r\n             return {...prevState,\r\n             post:e.target.value\r\n             }\r\n         })\r\n     }\r\n     const handleEmail=e=>{\r\n        setSignInfo(prevState=>{\r\n            return {\r\n                ...prevState,\r\n                email:e.target.value\r\n            }\r\n        });\r\n     };\r\n     const handlePassword=e=>{\r\n        setSignInfo(prevState=>{\r\n            return {\r\n                ...prevState,\r\n                password:e.target.value\r\n            }\r\n        });\r\n     };\r\n\r\n     const handleConfirm=e=>{\r\n        setSignInfo(prevState=>{\r\n            return {\r\n                ...prevState,\r\n                confirm:e.target.value\r\n            }\r\n        });\r\n     };\r\n\r\n     const handleUser=e=>{\r\n        setSignInfo(prevState=>{\r\n            return {\r\n                ...prevState,\r\n                user:e.target.value\r\n            }\r\n        });\r\n     };\r\n     \r\n     \r\n      \r\n    \r\n    return (\r\n        <BrowserRouter>\r\n            \r\n                <Routes>\r\n                                \r\n                    <Route path=\"/\" element={<App\r\n                        signInfo={signInfo}\r\n                        postInfo={postInfo}  \r\n                        handlePost={handlePost}\r\n                        setAvatar={setAvatar}\r\n                        />} >\r\n                        <Route path=\"\" element={<SocialPage\r\n                            clearPost={clearPost}\r\n                            postInfo={postInfo}  \r\n                            signInfo={signInfo}\r\n                            handlePost={handlePost}\r\n                        />}/>\r\n                        <Route path=\":id\" element={<About \r\n                            fillAvatar={fillAvatar}                           \r\n                            clearPost={clearPost}\r\n                            handlePost={handlePost}\r\n                            postInfo={postInfo}\r\n\r\n                        />}/>\r\n                        <Route path=\"settings\" element={<Settings \r\n                            signInfo={signInfo}\r\n                            handleDesc={handleDesc}\r\n                            clearDesc={clearDesc}\r\n                            currentUser={currentUser}\r\n                            fillAvatar={fillAvatar}\r\n                        />}/>\r\n                    </Route>\r\n                    <Route path=\"signup\" \r\n                        element={<SignUp \r\n                            signInfo={signInfo} \r\n                            handleName={handleName}\r\n                            handleEmail={handleEmail}\r\n                            handlePassword={handlePassword}  \r\n                            handleConfirm={handleConfirm}\r\n                            handleUser={handleUser}   \r\n                            setSignInfo={setSignInfo}                    \r\n                            \r\n                            />} />\r\n                    <Route path=\"login\" \r\n                        element={<Login \r\n                            signInfo={signInfo} \r\n                            handleEmail={handleEmail}\r\n                            handlePassword={handlePassword}\r\n                        />} />\r\n                    \r\n                </Routes>\r\n\r\n            \r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default RouteSwitch;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RouteSwitch from './RouteSwitch';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <RouteSwitch />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}